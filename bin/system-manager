#!/bin/bash
#================================================================
# HEADER
#================================================================
#%Usage: ${SCRIPT_NAME} ACTION
#% Simple restoration of installed programs
#%
#%
#%Action:
#%    custom                        Interactively let the user to select which scripts to execute from .custom in hooks.json
#%    init                          Executes the scripts in the .scripts in hooks.json
#%    install [groups]              Install the user specified groups. If blank defaults to normal
#%    link                          Link files as specified in .links and .links_root. If the target exists and the files aren't the same, the user will be asked to confirm.
#%    link-normal                   Link files as specified in .links If the target exists and the files aren't the same, the user will be asked to confirm.
#%    link-root                     Link files as specified in .links_root. If the target exists and the files aren't the same, the user will be asked to confirm.
#%    list-groups                   Outputs the list of user defined groups
#%    list-installed                Outputs the list of packages installed than are in a user defined group
#%    list-known                    Outputs the list of packages that are in a user defined group
#%    list-uninstalled              Outputs the list of packages in a user defined group that are not installed
#%    list-unknown                  Outputs the list of packages installed than are not in a user defined group
#%    -h, --help                    Print this help
#%    -v, --version                 Print script information
#%
#%
#================================================================
#- IMPLEMENTATION
#-    version         ${SCRIPT_NAME} (taaparthur.no-ip.org)
#-    author          Arthur Williams
#-    license         MIT
#================================================================
# END_OF_HEADER
#================================================================
#MAN generated with help2man -No system-manager.1 ./system-manager.sh

set -e

export SYSTEM_CONFIG_DIR=${SYSTEM_CONFIG_DIR:-~/SystemConfig}

export makeopts="-A"

displayHelp(){
    SCRIPT_HEADSIZE=$(head -200 ${0} |grep -n "^# END_OF_HEADER" | cut -f1 -d:)
    SCRIPT_NAME="$(basename ${0})"
    head -${SCRIPT_HEADSIZE:-99} ${0} | grep -e "^#[%+]" | sed -e "s/^#[%+-]//g" -e "s/\${SCRIPT_NAME}/${SCRIPT_NAME}/g" ;
}
displayVersion(){
    echo "0.5.0"
}

_link(){
    if [[ -z $1 ]]; then
        key=.links
    else
        key=.links_root
    fi
    while read -r src target; do
        target=$(eval echo $target)
        while read -r srcFile ; do
            [[ $target == */ ]] && $1 mkdir -p $target || $1 mkdir -p $(dirname $target);
            if [[ ! -d $target ]] && diff -qN $srcFile $target || diff -qN $srcFile $target$(basename $srcFile); then
                $1 ln -sf $srcFile $target
            else
                $1 ln -si $srcFile $target </dev/tty
            fi
        done < <(eval ls -d $src)
    done < <(jq -r "$key|to_entries|map(\"\(.key) \(.value|tostring)\")|.[]" $SYSTEM_CONFIG_DIR/hooks.json)
}
linkRoot(){
    _link sudo
}
linkNormal(){
    _link
}
linkFiles(){
    linkNormal
    linkRoot
}
getAllPackages(){
    $SYSTEM_CONFIG_DIR/bin/packages.sh list-all
}
listGroups(){
    $SYSTEM_CONFIG_DIR/bin/packages.sh list
}

install(){
    echo "Installing $*"
    ${PKG_MANAGER:-sudo pacman} -S $($SYSTEM_CONFIG_DIR/bin/packages.sh get $*) --needed
}

case "$1" in
    custom)
        shift
        args="$*"
        if [[ -z "$args" ]]; then
            args=$(echo $(selectCustom)|sed "s/ /, /g")
            echo "Selected $args"
        fi
        jq -r "$args " $SYSTEM_CONFIG_DIR/hooks.json | bash
        ;;
    init)
        jq -r '.scripts |join("; ")' $SYSTEM_CONFIG_DIR/hooks.json |bash
        ;;
    install)
        shift
        if [ -z "$*" ]; then
            args="normal"
        else
            args="$*"
        fi
        install $args
        ;;
     link-normal)
         linkNormal
         ;;
     link-root)
         linkRoot
         ;;
     link)
         linkFiles
         ;;
     list-groups)
         listGroups
         ;;
     list-installed)
         comm -12 <(pacman -Qqe|sort) <(getAllPackages)
       ;;
     list-uninstalled)
         comm -13 <(pacman -Qqe|sort) <(getAllPackages)
       ;;
     list-known)
        getAllPackages
       ;;
     list-unknown)
         comm -23 <(pacman -Qqe|sort) <(getAllPackages)
       ;;
     clean)
         [[ "$(pacman -Qtdq)" ]] && sudo pacman -Rns $(pacman -Qtdq)
         extra=$(comm -23 <(pacman -Qqe|sort) <(getAllPackages))
         sudo pacman -Rnsu $extra
         ;;
    help|--help|-h)
        displayHelp
        ;;
    version | --version|-v)
        displayVersion
        ;;
    *)
        echo "Unknown args $*"
        displayHelp
        exit 1
        ;;
esac
